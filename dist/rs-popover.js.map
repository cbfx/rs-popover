{"version":3,"sources":["module.js","rsPopover.js","attachment.js","rsPopoverForm.js","popoverController.js","popoverState.js","registry.js","rsPopoverTrigger.js","tether.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ALnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"rs-popover.js","sourcesContent":["angular.module('rs.popover', []).run(function () {\n  'use strict';\n\n  var styleContent, styleTag;\n\n  styleContent = document.createTextNode('.rs-popover-overlay { position: absolute; top: 0; left: 0; right: 0; bottom: 0; opacity: 0 } \\\n    .rs-popover-loading, .rs-popover-error { width: 200px; height: 140px } \\\n    .rs-popover-error { color: #c40022 } \\\n    .rs-popover-message { width: 100%; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); text-align: center; } \\\n    .rs-popover-body { margin: 0; padding: 20px }');\n  styleTag = document.createElement('style');\n  styleTag.type = 'text/css';\n  styleTag.appendChild(styleContent);\n\n  document.head.appendChild(styleTag);\n});\n","angular.module('rs.popover').directive('rsPopover', function () {\n  'use strict';\n\n  return {\n    scope: {\n      id: '@',\n      onOpen: '='\n    },\n    restrict: 'EA',\n    controller: 'PopoverController',\n    transclude: true,\n    templateUrl: 'rsPopover.html'\n  };\n});\n","angular.module('rs.popover').factory('Attachment', function () {\n  'use strict';\n\n  var VERTICAL_OFFSET = 11;\n  var HORIZONTAL_OFFSET = -33;\n\n  function Attachment(element, target) {\n    this.element = element;\n    this.target = target;\n  }\n\n  Attachment.prototype.position = function () {\n    var position, popoverElement;\n\n    position = this.target.offset();\n    position.top += this.target.outerHeight() + VERTICAL_OFFSET;\n    position.left += this.target.outerWidth() / 2 + HORIZONTAL_OFFSET;\n\n    popoverElement = $('.rs-popover', this.element).first();\n    popoverElement.css({ top: position.top, left: position.left });\n  };\n\n  return Attachment;\n});\n","angular.module('rs.popover').directive('rsPopoverForm', function ($timeout) {\n  'use strict';\n\n  return {\n    scope: {\n      id: '@',\n      saveLabel: '@',\n      cancelLabel: '@',\n      onOpen: '=',\n      onSave: '='\n    },\n    restrict: 'EA',\n    controller: 'PopoverController',\n    transclude: true,\n    templateUrl: 'rsPopoverForm.html',\n    link: function (scope, element) {\n      scope.state.on('load', function () {\n        $timeout(function () {\n          var focusable;\n\n          focusable = element.find(':input').first();\n          focusable.focus();\n        }, 0, false);\n      });\n    }\n  };\n});\n","angular.module('rs.popover').controller('PopoverController', function ($scope, $element, registry, tether, PopoverState) {\n  'use strict';\n\n  function resetState() {\n    var state;\n\n    state = new PopoverState();\n    state.on('open', $scope.onOpen || angular.noop);\n    state.on('save', $scope.onSave || angular.noop);\n    state.on('close', resetState);\n\n    $scope.state = state;\n  }\n\n  this.id = $scope.id;\n  registry.register($scope.id, $scope);\n  resetState();\n\n  $scope.$on('$destroy', function () {\n    registry.deregister($scope.id);\n  });\n\n  $scope.is = function (state) {\n    return $scope.state.is(state);\n  };\n\n  $scope.open = function (target) {\n    $scope.state.open();\n    tether.attach($element, target);\n  };\n\n  $scope.close = function () {\n    $scope.state.close();\n  };\n\n  $scope.toggle = function (target) {\n    if ($scope.state.is('closed')) {\n      $scope.open(target);\n    } else {\n      $scope.close();\n    }\n  };\n\n  $scope.save = function () {\n    $scope.state.save();\n  };\n});\n\n","angular.module('rs.popover').factory('PopoverState', function ($q) {\n  'use strict';\n\n  function PopoverState() {\n    this.state = PopoverState.CLOSED;\n    this.subscriptions = { open: [], load: [], error: [], save: [], close: [] };\n  }\n\n  PopoverState.prototype.is = function (state) {\n    return this.state === state;\n  };\n\n  PopoverState.prototype.on = function (e, handler) {\n    this.subscriptions[e].push(handler);\n  };\n\n  PopoverState.prototype.fire = function (e) {\n    var promises = [];\n\n    angular.forEach(this.subscriptions[e], function (handler) {\n      promises.push(handler());\n    });\n\n    return $q.all(promises);\n  };\n\n  PopoverState.prototype.open = function () {\n    this.message = 'Loadingâ€¦';\n    this.state = PopoverState.LOADING;\n    this.fire('open')\n      .then(angular.bind(this, this.load))\n      .catch(angular.bind(this, this.error));\n  };\n\n  PopoverState.prototype.load = function () {\n    this.state = PopoverState.OPEN;\n    this.fire('load');\n  };\n\n  PopoverState.prototype.error = function (message) {\n    this.message = message;\n    this.state = PopoverState.ERROR;\n    this.fire('error');\n  };\n\n  PopoverState.prototype.save = function () {\n    this.state = PopoverState.SAVING;\n    this.fire('save')\n      .then(angular.bind(this, this.close))\n      .catch(angular.bind(this, this.load));\n  };\n\n  PopoverState.prototype.close = function () {\n    this.state = PopoverState.CLOSED;\n    this.fire('close');\n  };\n\n  PopoverState.CLOSED = 'closed';\n  PopoverState.LOADING = 'loading';\n  PopoverState.OPEN = 'open';\n  PopoverState.ERROR = 'error';\n  PopoverState.SAVING = 'saving';\n\n  return PopoverState;\n});\n","angular.module('rs.popover').factory('registry', function () {\n  'use strict';\n\n  function Registry() {\n    this.popovers = {};\n  }\n\n  Registry.prototype.register = function (id, scope) {\n    if (!id) {\n      throw 'Popover ID must not be empty!';\n    } else if (id in this.popovers) {\n      throw 'Popover ID \"' + id + '\" has already been registered!';\n    }\n\n    this.popovers[id] = scope;\n  };\n\n  Registry.prototype.deregister = function (id) {\n    if (id in this.popovers) {\n      delete this.popovers[id];\n    } else {\n      throw 'Popover ID \"' + id + '\" has not been registered!';\n    }\n  };\n\n  Registry.prototype.popover = function (id) {\n    if (id in this.popovers) {\n      return this.popovers[id];\n    }\n\n    throw 'Popover ID \"' + id + '\" has not been registered!';\n  };\n\n  return new Registry();\n});\n","angular.module('rs.popover').directive('rsPopoverTrigger', function (registry) {\n  'use strict';\n\n  return {\n    restrict: 'A',\n    require: '?^rsPopover',\n    link: function (scope, element, attrs, popoverController) {\n      var id;\n\n      if (attrs.rsPopoverTrigger) {\n        id = attrs.rsPopoverTrigger;\n      } else if (popoverController) {\n        id = popoverController.id;\n      } else {\n        throw 'No popover ID was specified for popover trigger!';\n      }\n\n      element.on('click', function (e) {\n        e.preventDefault();\n\n        registry.popover(id).toggle(element);\n        scope.$apply();\n      });\n    }\n  };\n});\n\n","angular.module('rs.popover').factory('tether', function ($window, Attachment) {\n  'use strict';\n\n  function Tether() {\n    this.attachments = [];\n\n    angular.element($window).on('resize scroll', angular.bind(this, this.reposition));\n  }\n\n  Tether.prototype.attach = function (element, target) {\n    var attachment;\n\n    attachment = new Attachment(element, target);\n    attachment.position();\n\n    this.attachments.push(attachment);\n\n    return attachment;\n  };\n\n  Tether.prototype.reposition = function () {\n    angular.forEach(this.attachments, function (attachment) {\n      attachment.position();\n    });\n  };\n\n  Tether.prototype.detach = function (element) {\n    var index;\n\n    angular.forEach(this.attachments, function (attachment, i) {\n      if (attachment.element === element) {\n        index = i;\n      }\n    });\n\n    this.attachments.splice(index, 1);\n  };\n\n  return new Tether();\n});\n"],"sourceRoot":"/source/"}