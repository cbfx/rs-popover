{"version":3,"sources":["module.js","rsPopover.js","attachment.js","rsPopoverForm.js","focus.js","form.js","popoverController.js","popoverState.js","registry.js","rsPopoverTrigger.js","tether.js"],"names":[],"mappings":"AAAA;EACE;;EAEA;;EAEA;IACE;IACA;IACA;IACA;EACF;EACA;EACA;;EAEA;AACF;;ACfA;AACA;EACE;AACF;EACE;AACF;AACA;EACE;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACJ;AACA;;ACzBA,sCAAsC,UAAU;EAC9C;;EAEA;EACA;;EAEA;IACE;IACA;IACA;EACF;;EAEA;IACE;;IAEA;;IAEA;MACE;MACA;IACF;MACE;MACA;IACF;;IAEA;IACA;EACF;;EAEA;EACA;;EAEA;AACF;;ACjCA;AACA;EACE;AACF;EACE;AACF;AACA;EACE;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACJ;AACA;;AC7BA,sCAAsC,KAAK,GAAG,aAAA;EAC5C;;EAEA;IACE;MACE;;MAEA;MACA;IACF;EACF;AACF,CAAC,CAAA;;ACXD,sCAAsC,IAAI;EACxC;;EAEA;IACE;EACF;;EAEA;IACE;IACA;MACE;;MAEA;MACA;;MAEA;QACE;MACF;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QACE;MACF;QACE;MACF;IACF;EACF;;EAEA;IACE;IACA;EACF;AACF;;ACtCA,yCAAyC,iBAAiB,GAAG,8EAAA;EAC3D;;EAEA;IACE;;IAEA;IACA;IACA;IACA;IACA;MACE;IACF;IACA;MACE;IACF;;IAEA;EACF;;EAEA;EACA;EACA;;EAEA;IACE;IACA;IACA;EACF;;EAEA;IACE;EACF;;EAEA;IACE;EACF;;EAEA;IACE;IACA;EACF;;EAEA;IACE;EACF;;EAEA;IACE;MACE;IACF;MACE;IACF;EACF;;EAEA;IACE;;IAEA;MACE;IACF;EACF;AACF,CAAC,CAAA;;;AC9DD,sCAAsC,YAAY,GAAG,OAAA;EACnD;;EAEA;IACE;IACA;EACF;;EAEA;IACE;EACF;;EAEA;IACE;EACF;;EAEA;IACE;;IAEA;MACE;IACF;;IAEA;EACF;;EAEA;IACE;IACA;IACA;MACE;MACA;EACJ;;EAEA;IACE;IACA;EACF;;EAEA;IACE;IACA;IACA;EACF;;EAEA;IACE;IACA;MACE;MACA;EACJ;;EAEA;IACE;IACA;EACF;;EAEA;EACA;EACA;EACA;EACA;;EAEA;AACF,CAAC,CAAA;;AChED,sCAAsC,QAAQ;EAC5C;;EAEA;IACE;EACF;;EAEA;IACE;MACE;IACF;MACE;IACF;;IAEA;EACF;;EAEA;IACE;MACE;IACF;MACE;IACF;EACF;;EAEA;IACE;MACE;IACF;;IAEA;EACF;;EAEA;AACF;;APlCA,wCAAwC,SAAS;EAC/C;;EAEA;IACE;MACE;MACA;MACA;IACF;IACA;IACA,aAAa,iBAAiB;IAC9B;IACA;IACA;MACE;IACF;EACF;AACF;;AEjBA,wCAAwC,aAAa;EACnD;;EAEA;IACE;MACE;MACA;MACA;MACA;MACA;MACA;IACF;IACA;IACA,aAAa,iBAAiB;IAC9B;IACA;IACA;MACE;IACF;EACF;AACF;;AMpBA,wCAAwC,gBAAgB,GAAG,aAAA;EACzD;;EAEA;IACE;IACA;IACA;MACE;;MAEA;QACE;MACF;QACE;MACF;QACE;MACF;;MAEA;QACE;;QAEA;QACA;MACF;IACF;EACF;AACF,CAAC,CAAA;;;ACzBD,sCAAsC,MAAM,GAAG,0BAAA;EAC7C;;EAEA;IACE;;IAEA;EACF;;EAEA;IACE;;IAEA;IACA;;IAEA;;IAEA;EACF;;EAEA;IACE;MACE;IACF;EACF;;EAEA;IACE;;IAEA;MACE;QACE;MACF;IACF;;IAEA;EACF;;EAEA;AACF,CAAC,CAAA","file":"rs-popover.js","sourcesContent":["angular.module('rs.popover', []).run(function () {\n  'use strict';\n\n  var styleContent, styleTag;\n\n  styleContent = document.createTextNode('.rs-popover-overlay { position: fixed; top: 0; left: 0; right: 0; bottom: 0; opacity: 0 } \\\n    .rs-popover-loading, .rs-popover-error { width: 200px; height: 140px } \\\n    .rs-popover-error { color: #c40022 } \\\n    .rs-popover-message { width: 100%; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); text-align: center; } \\\n    .rs-popover-body { margin: 0; padding: 20px }');\n  styleTag = document.createElement('style');\n  styleTag.type = 'text/css';\n  styleTag.appendChild(styleContent);\n\n  document.head.appendChild(styleTag);\n});\n","angular.module('rs.popover').directive('rsPopover', function () {\n  'use strict';\n\n  return {\n    scope: {\n      id: '@',\n      attach: '@',\n      onOpen: '='\n    },\n    restrict: 'EA',\n    controller: 'PopoverController',\n    transclude: true,\n    templateUrl: 'rsPopover.html',\n    compile: function (element, attributes) {\n      attributes.attach = attributes.attach || 'top-left';\n    }\n  };\n});\n","angular.module('rs.popover').factory('Attachment', function () {\n  'use strict';\n\n  var ARROW_SIZE = 11;\n  var ARROW_OFFSET = -33;\n\n  function Attachment(element, target, attachmentPoint) {\n    this.element = element;\n    this.target = target;\n    this.attachmentPoint = attachmentPoint;\n  }\n\n  Attachment.prototype.position = function () {\n    var position, popoverElement;\n\n    position = this.target.offset();\n\n    if (this.attachmentPoint === Attachment.TOP_LEFT) {\n      position.top += this.target.outerHeight() + ARROW_SIZE;\n      position.left += this.target.outerWidth() / 2 + ARROW_OFFSET;\n    } else {\n      position.top += this.target.outerHeight() / 2 + ARROW_OFFSET;\n      position.left += this.target.outerWidth() + ARROW_SIZE;\n    }\n\n    popoverElement = $('.rs-popover', this.element).first();\n    popoverElement.css({ top: position.top, left: position.left });\n  };\n\n  Attachment.LEFT_TOP = 'left-top';\n  Attachment.TOP_LEFT = 'top-left';\n\n  return Attachment;\n});\n","angular.module('rs.popover').directive('rsPopoverForm', function () {\n  'use strict';\n\n  return {\n    scope: {\n      id: '@',\n      attach: '@',\n      saveLabel: '@',\n      cancelLabel: '@',\n      onOpen: '=',\n      onSave: '='\n    },\n    restrict: 'EA',\n    controller: 'PopoverController',\n    transclude: true,\n    templateUrl: 'rsPopoverForm.html',\n    compile: function (element, attributes) {\n      attributes.attach = attributes.attach || 'top-left';\n    }\n  };\n});\n","angular.module('rs.popover').factory('focus', function ($timeout) {\n  'use strict';\n\n  return function focus(element, invokeApply) {\n    return $timeout(function () {\n      var focusableElement;\n\n      focusableElement = element.find(':input').first();\n      focusableElement.focus();\n    }, 0, invokeApply || false);\n  };\n});\n","angular.module('rs.popover').factory('form', function () {\n  'use strict';\n\n  function reset(element, form) {\n    form.$setPristine();\n  }\n\n  function validate(element) {\n    element = angular.element(element);\n    element.find(':input').each(function (i, element) {\n      var controller;\n\n      element = angular.element(element);\n      controller = element.controller('ngModel');\n\n      if (!controller) {\n        return;\n      }\n\n      /*\n      HACK: We need a way to force validation on fields that haven't been\n      interacted with, so we change the view value from `undefined` to an empty\n      string using $setViewValue. However, this only works the first time\n      validation is forced, so we need to alternate between setting `undefined`\n      and an empty string.\n      */\n      if (controller.$viewValue === undefined) {\n        controller.$setViewValue('');\n      } else if (controller.$viewValue === '') {\n        controller.$setViewValue(undefined);\n      }\n    });\n  }\n\n  return {\n    reset: reset,\n    validate: validate\n  };\n});\n","angular.module('rs.popover').controller('PopoverController', function ($scope, $element, registry, form, tether, focus, PopoverState) {\n  'use strict';\n\n  function resetState() {\n    var state;\n\n    state = new PopoverState();\n    state.on('open', $scope.onOpen || angular.noop);\n    state.on('save', $scope.onSave || angular.noop);\n    state.on('close', resetState);\n    state.on('close', function () {\n      form.reset($element, $scope.form);\n    });\n    state.on('load', function () {\n      focus($element);\n    });\n\n    $scope.state = state;\n  }\n\n  this.id = $scope.id;\n  registry.register($scope.id, $scope);\n  resetState();\n\n  $scope.styles = {\n    'rs-popover-arrow': true,\n    'rs-popover-arrow-top-left': $scope.attach === 'top-left',\n    'rs-popover-arrow-left-top': $scope.attach === 'left-top'\n  };\n\n  $scope.$on('$destroy', function () {\n    registry.deregister($scope.id);\n  });\n\n  $scope.is = function (state) {\n    return $scope.state.is(state);\n  };\n\n  $scope.open = function (target) {\n    $scope.state.open();\n    tether.attach($element, target, $scope.attach);\n  };\n\n  $scope.close = function () {\n    $scope.state.close();\n  };\n\n  $scope.toggle = function (target) {\n    if ($scope.state.is('closed')) {\n      $scope.open(target);\n    } else {\n      $scope.close();\n    }\n  };\n\n  $scope.save = function () {\n    form.validate($element, $scope.form);\n\n    if ($scope.form.$valid) {\n      $scope.state.save();\n    }\n  };\n});\n\n","angular.module('rs.popover').factory('PopoverState', function ($q) {\n  'use strict';\n\n  function PopoverState() {\n    this.state = PopoverState.CLOSED;\n    this.subscriptions = { open: [], load: [], error: [], save: [], close: [] };\n  }\n\n  PopoverState.prototype.is = function (state) {\n    return this.state === state;\n  };\n\n  PopoverState.prototype.on = function (e, handler) {\n    this.subscriptions[e].push(handler);\n  };\n\n  PopoverState.prototype.fire = function (e) {\n    var promises = [];\n\n    angular.forEach(this.subscriptions[e], function (handler) {\n      promises.push(handler());\n    });\n\n    return $q.all(promises);\n  };\n\n  PopoverState.prototype.open = function () {\n    this.message = 'Loadingâ€¦';\n    this.state = PopoverState.LOADING;\n    this.fire('open')\n      .then(angular.bind(this, this.load))\n      .catch(angular.bind(this, this.error));\n  };\n\n  PopoverState.prototype.load = function () {\n    this.state = PopoverState.OPEN;\n    this.fire('load');\n  };\n\n  PopoverState.prototype.error = function (message) {\n    this.message = message;\n    this.state = PopoverState.ERROR;\n    this.fire('error');\n  };\n\n  PopoverState.prototype.save = function () {\n    this.state = PopoverState.SAVING;\n    this.fire('save')\n      .then(angular.bind(this, this.close))\n      .catch(angular.bind(this, this.load));\n  };\n\n  PopoverState.prototype.close = function () {\n    this.state = PopoverState.CLOSED;\n    this.fire('close');\n  };\n\n  PopoverState.CLOSED = 'closed';\n  PopoverState.LOADING = 'loading';\n  PopoverState.OPEN = 'open';\n  PopoverState.ERROR = 'error';\n  PopoverState.SAVING = 'saving';\n\n  return PopoverState;\n});\n","angular.module('rs.popover').factory('registry', function () {\n  'use strict';\n\n  function Registry() {\n    this.popovers = {};\n  }\n\n  Registry.prototype.register = function (id, scope) {\n    if (!id) {\n      throw 'Popover ID must not be empty!';\n    } else if (id in this.popovers) {\n      throw 'Popover ID \"' + id + '\" has already been registered!';\n    }\n\n    this.popovers[id] = scope;\n  };\n\n  Registry.prototype.deregister = function (id) {\n    if (id in this.popovers) {\n      delete this.popovers[id];\n    } else {\n      throw 'Popover ID \"' + id + '\" has not been registered!';\n    }\n  };\n\n  Registry.prototype.popover = function (id) {\n    if (id in this.popovers) {\n      return this.popovers[id];\n    }\n\n    throw 'Popover ID \"' + id + '\" has not been registered!';\n  };\n\n  return new Registry();\n});\n","angular.module('rs.popover').directive('rsPopoverTrigger', function (registry) {\n  'use strict';\n\n  return {\n    restrict: 'A',\n    require: '?^rsPopover',\n    link: function (scope, element, attrs, popoverController) {\n      var id;\n\n      if (attrs.rsPopoverTrigger) {\n        id = attrs.rsPopoverTrigger;\n      } else if (popoverController) {\n        id = popoverController.id;\n      } else {\n        throw 'No popover ID was specified for popover trigger!';\n      }\n\n      element.on('click', function (e) {\n        e.preventDefault();\n\n        registry.popover(id).toggle(element);\n        scope.$apply();\n      });\n    }\n  };\n});\n\n","angular.module('rs.popover').factory('tether', function ($window, Attachment) {\n  'use strict';\n\n  function Tether() {\n    this.attachments = [];\n\n    angular.element($window).on('resize scroll', angular.bind(this, this.reposition));\n  }\n\n  Tether.prototype.attach = function (element, target, attachmentPoint) {\n    var attachment;\n\n    attachment = new Attachment(element, target, attachmentPoint);\n    attachment.position();\n\n    this.attachments.push(attachment);\n\n    return attachment;\n  };\n\n  Tether.prototype.reposition = function () {\n    angular.forEach(this.attachments, function (attachment) {\n      attachment.position();\n    });\n  };\n\n  Tether.prototype.detach = function (element) {\n    var index;\n\n    angular.forEach(this.attachments, function (attachment, i) {\n      if (attachment.element === element) {\n        index = i;\n      }\n    });\n\n    this.attachments.splice(index, 1);\n  };\n\n  return new Tether();\n});\n"],"sourceRoot":"/source/"}