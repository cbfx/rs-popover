{"version":3,"sources":["module.js","rsPopover.js","attachment.js","rsPopoverForm.js","form.js","popoverController.js","popoverStateMachine.js","registry.js","rsPopoverTrigger.js","tether.js"],"names":[],"mappings":"AAAA,QAAA,OAAA,iBAAA,IAAA,WACE,YAEA,IAAA,GAAA,CAEA,GAAA,SAAA,eAAA,isBASA,EAAA,SAAA,cAAA,SACA,EAAA,KAAA,WACA,EAAA,YAAA,GAEA,SAAA,KAAA,YAAA,KClBF,SAAA,GACA,IACE,EAAA,QAAA,OAAA,cACF,MAAA,GACE,EAAA,QAAA,OAAA,iBAEF,EAAA,KAAA,iBAAA,SAAA,GACE,EAAA,IAAA,iBACE,ypBCRJ,QAAA,OAAA,cAAA,QAAA,aAAgD,WAC9C,YAKA,SAAA,GAAA,EAAA,EAAA,GACE,KAAA,QAAA,EACA,KAAA,OAAA,EACA,KAAA,gBAAA,EANF,GAAA,GAAA,GACA,EAAA,GA4BA,OApBA,GAAA,UAAA,SAAA,WACE,GAAA,GAAA,CAEA,GAAA,KAAA,OAAA,SAEA,KAAA,kBAAA,EAAA,UACE,EAAA,KAAA,KAAA,OAAA,cAAA,EACA,EAAA,MAAA,KAAA,OAAA,aAAA,EAAA,IAEA,EAAA,KAAA,KAAA,OAAA,cAAA,EAAA,EACA,EAAA,MAAA,KAAA,OAAA,aAAA,GAGF,EAAA,EAAA,cAAA,KAAA,SAAA,QACA,EAAA,KAAA,IAAA,EAAA,IAAA,KAAA,EAAA,QAGF,EAAA,SAAA,WACA,EAAA,SAAA,WAEA,IChCF,SAAA,GACA,IACE,EAAA,QAAA,OAAA,cACF,MAAA,GACE,EAAA,QAAA,OAAA,iBAEF,EAAA,KAAA,iBAAA,SAAA,GACE,EAAA,IAAA,qBACE,i2CCRJ,QAAA,OAAA,cAAA,QAAA,QAA6C,WAAA,SAAA,GAC3C,YAEA,SAAA,GAAA,GACE,EAAA,eAGF,QAAA,GAAA,EAAA,GA4BE,MA3BA,GAAA,QAAA,QAAA,GACA,EAAA,KAAA,UAAA,KAAA,SAAA,EAAA,GACE,GAAA,EAEA,GAAA,QAAA,QAAA,GACA,EAAA,EAAA,WAAA,WAEA,IAWA,SAAA,EAAA,WACE,EAAA,cAAA,IACF,KAAA,EAAA,YACE,EAAA,cAAA,QAGF,EAAA,sBAGF,EAAA,OAGF,QAAA,GAAA,EAAA,GACE,MAAA,GAAA,WACE,GAAA,EAEA,GAAA,EAAA,KAAA,UAAA,QACA,EAAA,SACF,EAAA,IAAA,GAGF,OACE,MAAA,EACA,SAAA,EACA,MAAA,MClDJ,QAAA,OAAA,cAAA,WAAA,qBAA6D,SAAA,WAAA,KAAA,sBAAA,OAAA,WAAA,SAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAC3D,YAEA,SAAA,GAAA,EAAA,EAAA,EAAA,GACE,GAAA,EAKA,OAHA,GAAA,GAAA,QAAA,KACA,EAAA,EAAA,EAAA,MAEA,EAAA,KAAA,GAAA,KAAA,WACE,EAAA,UACF,SAAA,GACE,EAAA,aAAA,EAAA,WACA,EAAA,SAIJ,KAAA,GAAA,SAAA,GACE,MAAA,MAAA,IAAA,GAAA,IAGF,KAAA,KAAA,SAAA,EAAA,EAAA,GACE,KAAA,IAAA,YAAA,QAAA,EAAA,OAAA,EAAA,OAAA,EAAA,KAAA,IACA,KAAA,IAAA,QAGF,KAAA,KAAA,WACE,EAAA,SAAA,EAAA,KAAA,IACE,KAAA,IAAA,QAIJ,KAAA,MAAA,WACE,KAAA,IAAA,SAGF,KAAA,OAAA,WACE,GAAA,EAEA,GAAA,KAAA,GAAA,UAAA,KAAA,KAAA,KAAA,MACA,EAAA,MAAA,KAAA,YAGF,KAAA,MAAA,WACE,GAAA,GAAA,CAKA,OAHA,GAAA,KAAA,IAAA,QACA,EAAA,EAAA,QAGE,oBAAA,EACA,4BAAA,aAAA,EACA,4BAAA,aAAA,IAIJ,KAAA,MAAA,WACE,MAAA,MAAA,cAGF,KAAA,OAAA,SAAA,EAAA,GAGE,MAFA,GAAA,OAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAEA,EAAA,KAAA,EAAA,OAAA,EAAA,IAGF,KAAA,OAAA,SAAA,EAAA,GACE,EAAA,MAAA,EAAA,UAGF,KAAA,OAAA,SAAA,EAAA,GACE,MAAA,GAAA,KAAA,EAAA,OAAA,EAAA,IAGF,KAAA,QAAA,SAAA,EAAA,GACE,EAAA,MACE,EAAA,MAAA,EAAA,MAGF,EAAA,OAAA,EAAA,UAGF,KAAA,GAAA,EAAA,GACA,KAAA,IAAA,GAAA,GACA,KAAA,IAAA,GAAA,UAAA,QAAA,KAAA,KAAA,KAAA,SACA,KAAA,IAAA,GAAA,OAAA,QAAA,KAAA,KAAA,KAAA,SACA,KAAA,IAAA,GAAA,SAAA,QAAA,KAAA,KAAA,KAAA,SACA,KAAA,IAAA,GAAA,SAAA,QAAA,KAAA,KAAA,KAAA,UAEA,EAAA,SAAA,KAAA,GAAA,MAEA,EAAA,IAAA,WAAA,WACE,EAAA,WAAA,EAAA,SC5FJ,QAAA,OAAA,cAAA,QAAA,uBAA4D,KAAA,SAAA,GAC1D,YASA,SAAA,KACE,KAAA,WACA,KAAA,MAAA,EAEA,KAAA,iBACA,KAAA,cAAA,MACA,KAAA,cAAA,MACA,KAAA,cAAA,MACA,KAAA,cAAA,MACA,KAAA,cAAA,MACA,KAAA,cAAA,MAjBF,GAAA,GAAA,UACA,EAAA,gBACA,EAAA,OACA,EAAA,SACA,EAAA,eACA,EAAA,QA0EA,OA3DA,GAAA,UAAA,WAAA,SAAA,GACE,KAAA,QAAA,GAGF,EAAA,UAAA,GAAA,SAAA,GACE,MAAA,MAAA,QAAA,GAGF,EAAA,UAAA,GAAA,SAAA,EAAA,GACE,KAAA,cAAA,GAAA,KAAA,IAGF,EAAA,UAAA,WAAA,SAAA,GACE,GAAA,KAOA,OALA,MAAA,MAAA,EACA,KAAA,cAAA,GAAA,QAAA,SAAA,GACE,EAAA,KAAA,EAAA,KAAA,KAAA,WACF,MAEA,EAAA,IAAA,IAGF,EAAA,UAAA,KAAA,YACE,KAAA,GAAA,IAAA,KAAA,GAAA,KACE,KAAA,WAAA,IAIJ,EAAA,UAAA,KAAA,YACE,KAAA,GAAA,IAAA,KAAA,GAAA,KACE,KAAA,WAAA,IAIJ,EAAA,UAAA,OAAA,WACE,KAAA,GAAA,GACE,KAAA,WAAA,GACF,KAAA,GAAA,IACE,KAAA,WAAA,IAIJ,EAAA,UAAA,KAAA,WACE,KAAA,GAAA,GACE,KAAA,WAAA,GACF,KAAA,GAAA,IACE,KAAA,WAAA,IAIJ,EAAA,UAAA,MAAA,WACE,KAAA,GAAA,IAIA,KAAA,WAAA,IAGF,KClFF,QAAA,OAAA,cAAA,QAAA,WAA8C,WAC5C,YAEA,SAAA,KACE,KAAA,YA6BF,MA1BA,GAAA,UAAA,SAAA,SAAA,EAAA,GACE,IAAA,EACE,KAAA,+BACF,IAAA,IAAA,MAAA,SACE,KAAA,eAAA,EAAA,gCAGF,MAAA,SAAA,GAAA,GAGF,EAAA,UAAA,WAAA,SAAA,GACE,KAAA,IAAA,MAAA,UAGE,KAAA,eAAA,EAAA,mCAFA,MAAA,SAAA,IAMJ,EAAA,UAAA,QAAA,SAAA,GACE,GAAA,IAAA,MAAA,SACE,MAAA,MAAA,SAAA,EAGF,MAAA,eAAA,EAAA,8BAGF,GAAA,KNjCF,QAAA,OAAA,cAAA,UAAA,YAAiD,WAC/C,YAEA,QACE,OACE,GAAA,IACA,OAAA,KAEF,SAAA,KACA,WAAA,oBACA,aAAA,OACA,YAAA,EACA,YAAA,oBEZJ,QAAA,OAAA,cAAA,UAAA,gBAAqD,WACnD,YAEA,QACE,OACE,GAAA,IACA,UAAA,IACA,YAAA,IACA,OAAA,IACA,OAAA,KAEF,SAAA,KACA,WAAA,oBACA,aAAA,OACA,YAAA,EACA,YAAA,wBKfJ,QAAA,OAAA,cAAA,UAAA,oBAA2D,WAAA,aAAA,SAAA,EAAA,GACzD,YAEA,SAAA,GAAA,EAAA,GACE,GAAA,EAAA,iBACE,MAAA,GAAA,gBACF,IAAA,EACE,MAAA,GAAA,EAGF,MAAA,mDAGF,QAAA,GAAA,EAAA,GACE,MAAA,GAAA,gBACE,QAAA,QAAA,IAAA,EAAA,iBAGF,EAGF,QAAA,GAAA,GACE,MAAA,GAAA,gBACE,EAAA,gBAGF,EAAA,SAGF,QAAA,GAAA,EAAA,GACE,MAAA,GAAA,cACE,EAAA,MAAA,EAAA,kBAMJ,OACE,SAAA,IACA,QAAA,cACA,KAAA,SAAA,EAAA,EAAA,EAAA,GACE,GAAA,GAAA,EAAA,EAAA,CAEA,GAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GAEA,EAAA,GAAA,QAAA,SAAA,GACE,EAAA,iBAEA,EAAA,QAAA,GAAA,OAAA,EAAA,EAAA,GACA,EAAA,gBCpDR,QAAA,OAAA,cAAA,QAAA,UAA+C,UAAA,aAAA,SAAA,EAAA,GAC7C,YAEA,SAAA,KACE,KAAA,eAEA,QAAA,QAAA,GAAA,GAAA,SAAA,QAAA,KAAA,KAAA,KAAA,aAgCF,MA7BA,GAAA,UAAA,OAAA,SAAA,EAAA,EAAA,GACE,GAAA,EAOA,OALA,GAAA,GAAA,GAAA,EAAA,EAAA,GACA,EAAA,WAEA,KAAA,YAAA,KAAA,GAEA,GAGF,EAAA,UAAA,WAAA,WACE,QAAA,QAAA,KAAA,YAAA,SAAA,GACE,EAAA,cAIJ,EAAA,UAAA,OAAA,SAAA,GACE,GAAA,EAEA,SAAA,QAAA,KAAA,YAAA,SAAA,EAAA,GACE,EAAA,UAAA,IACE,EAAA,KAIJ,KAAA,YAAA,OAAA,EAAA,IAGF,GAAA","file":"rs-popover.min.js","sourcesContent":["angular.module('rs.popover', []).run(function () {\n  'use strict';\n\n  var styleContent, styleTag;\n\n  styleContent = document.createTextNode('.rs-popover-overlay { position: fixed; top: 0; left: 0; right: 0; bottom: 0; opacity: 0 } \\\n    .rs-popover-content { display: block; } \\\n    .rs-popover-loading, .rs-popover-error { width: 200px; height: 140px } \\\n    .rs-popover-error { color: #c40022 } \\\n    .rs-popover-message { width: 100%; position: absolute; top: 50%; left: 50%; -moz-transform: translate(-50%, -50%); -ms-transform: translate(-50%, -50%); -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); text-align: center; } \\\n    .rs-popover-body { margin: 0; padding: 20px } \\\n    .rs-popover-footer > .rs-status-error { float: left; margin-top: 3px; } \\\n    .rs-popover-footer > .rs-processing-indicator { margin-top: 5px; }'\n    );\n  styleTag = document.createElement('style');\n  styleTag.type = 'text/css';\n  styleTag.appendChild(styleContent);\n\n  document.head.appendChild(styleTag);\n});\n","angular.module('rs.popover').directive('rsPopover', function () {\n  'use strict';\n\n  return {\n    scope: {\n      id: '@',\n      onOpen: '='\n    },\n    restrict: 'EA',\n    controller: 'PopoverController',\n    controllerAs: 'ctrl',\n    transclude: true,\n    templateUrl: 'rsPopover.html'\n  };\n});\n","angular.module('rs.popover').factory('Attachment', function () {\n  'use strict';\n\n  var ARROW_SIZE = 11;\n  var ARROW_OFFSET = -33;\n\n  function Attachment(element, target, attachmentPoint) {\n    this.element = element;\n    this.target = target;\n    this.attachmentPoint = attachmentPoint;\n  }\n\n  Attachment.prototype.position = function () {\n    var position, popoverElement;\n\n    position = this.target.offset();\n\n    if (this.attachmentPoint === Attachment.TOP_LEFT) {\n      position.top += this.target.outerHeight() + ARROW_SIZE;\n      position.left += this.target.outerWidth() / 2 + ARROW_OFFSET;\n    } else {\n      position.top += this.target.outerHeight() / 2 + ARROW_OFFSET;\n      position.left += this.target.outerWidth() + ARROW_SIZE;\n    }\n\n    popoverElement = $('.rs-popover', this.element).first();\n    popoverElement.css({ top: position.top, left: position.left });\n  };\n\n  Attachment.LEFT_TOP = 'left-top';\n  Attachment.TOP_LEFT = 'top-left';\n\n  return Attachment;\n});\n","angular.module('rs.popover').directive('rsPopoverForm', function () {\n  'use strict';\n\n  return {\n    scope: {\n      id: '@',\n      saveLabel: '@',\n      cancelLabel: '@',\n      onOpen: '=',\n      onSave: '='\n    },\n    restrict: 'EA',\n    controller: 'PopoverController',\n    controllerAs: 'ctrl',\n    transclude: true,\n    templateUrl: 'rsPopoverForm.html'\n  };\n});\n","angular.module('rs.popover').factory('form', function ($timeout) {\n  'use strict';\n\n  function reset(form) {\n    form.$setPristine();\n  }\n\n  function validate(form, element) {\n    element = angular.element(element);\n    element.find(':input').each(function (i, element) {\n      var controller;\n\n      element = angular.element(element);\n      controller = element.controller('ngModel');\n\n      if (!controller) {\n        return;\n      }\n\n      /*\n      HACK: We need a way to force validation on fields that haven't been\n      interacted with, so we change the view value from `undefined` to an empty\n      string using $setViewValue. However, this only works the first time\n      validation is forced, so we need to alternate between setting `undefined`\n      and an empty string.\n      */\n      if (controller.$viewValue === undefined) {\n        controller.$setViewValue('');\n      } else if (controller.$viewValue === '') {\n        controller.$setViewValue(undefined);\n      }\n\n      controller.$commitViewValue();\n    });\n\n    return form.$valid;\n  }\n\n  function focus(element, invokeApply) {\n    return $timeout(function () {\n      var focusableElement;\n\n      focusableElement = element.find(':input').first();\n      focusableElement.focus();\n    }, 0, invokeApply || false);\n  }\n\n  return {\n    reset: reset,\n    validate: validate,\n    focus: focus\n  };\n});\n","angular.module('rs.popover').controller('PopoverController', function ($scope, $element, $q, PopoverStateMachine, form, registry, tether) {\n  'use strict';\n\n  function executeHook(self, hook, fsm, ctx) {\n    var result;\n\n    hook = hook || angular.noop;\n    result = hook(ctx.data);\n\n    return $q.when(result).then(function () {\n      fsm.finish();\n    }, function (err) {\n      self.errorMessage = err.toString();\n      fsm.fail();\n    });\n  }\n\n  this.is = function (state) {\n    return this.fsm.is(state);\n  };\n\n  this.open = function (target, corner, data) {\n    this.fsm.setContext({ element: $element, target: target, corner: corner, data: data });\n    this.fsm.open();\n  };\n\n  this.save = function () {\n    if (form.validate($scope.form, $element)) {\n      this.fsm.save();\n    }\n  };\n\n  this.close = function () {\n    this.fsm.close();\n  };\n\n  this.toggle = function () {\n    var handler;\n\n    handler = this.is('closed') ? this.open : this.close;\n    handler.apply(this, arguments);\n  };\n\n  this.arrow = function () {\n    var context, corner;\n\n    context = this.fsm.context;\n    corner = context.corner;\n\n    return {\n      'rs-popover-arrow': true,\n      'rs-popover-arrow-top-left': corner === 'top-left',\n      'rs-popover-arrow-left-top': corner === 'left-top'\n    };\n  };\n\n  this.error = function () {\n    return this.errorMessage;\n  };\n\n  this.onOpen = function (fsm, ctx) {\n    tether.attach(ctx.element, ctx.target, ctx.corner);\n\n    return executeHook(this, $scope.onOpen, fsm, ctx);\n  };\n\n  this.onLoad = function (fsm, ctx) {\n    form.focus(ctx.element);\n  };\n\n  this.onSave = function (fsm, ctx) {\n    return executeHook(this, $scope.onSave, fsm, ctx);\n  };\n\n  this.onClose = function (fsm, ctx) {\n    if ($scope.form) {\n      form.reset($scope.form);\n    }\n\n    tether.detach(ctx.element);\n  };\n\n  this.id = $scope.id;\n  this.fsm = new PopoverStateMachine();\n  this.fsm.on('opening', angular.bind(this, this.onOpen));\n  this.fsm.on('open', angular.bind(this, this.onLoad));\n  this.fsm.on('saving', angular.bind(this, this.onSave));\n  this.fsm.on('closed', angular.bind(this, this.onClose));\n\n  registry.register(this.id, this);\n\n  $scope.$on('$destroy', function () {\n    registry.deregister($scope.id);\n  });\n});\n","angular.module('rs.popover').factory('PopoverStateMachine', function ($q) {\n  'use strict';\n\n  var OPENING = 'opening';\n  var OPENING_FAILED = 'openingFailed';\n  var OPEN = 'open';\n  var SAVING = 'saving';\n  var SAVING_FAILED = 'savingFailed';\n  var CLOSED = 'closed';\n\n  function PopoverStateMachine() {\n    this.context = {};\n    this.state = CLOSED;\n\n    this.subscriptions = {};\n    this.subscriptions[OPENING] = [];\n    this.subscriptions[OPENING_FAILED] = [];\n    this.subscriptions[OPEN] = [];\n    this.subscriptions[SAVING] = [];\n    this.subscriptions[SAVING_FAILED] = [];\n    this.subscriptions[CLOSED] = [];\n  }\n\n  PopoverStateMachine.prototype.setContext = function (context) {\n    this.context = context;\n  };\n\n  PopoverStateMachine.prototype.is = function (state) {\n    return this.state === state;\n  };\n\n  PopoverStateMachine.prototype.on = function (e, handler) {\n    this.subscriptions[e].push(handler);\n  };\n\n  PopoverStateMachine.prototype.transition = function (state) {\n    var promises = [];\n\n    this.state = state;\n    this.subscriptions[state].forEach(function (handler) {\n      promises.push(handler(this, this.context));\n    }, this);\n\n    return $q.all(promises);\n  };\n\n  PopoverStateMachine.prototype.open = function () {\n    if (this.is(CLOSED) || this.is(OPENING_FAILED)) {\n      this.transition(OPENING);\n    }\n  };\n\n  PopoverStateMachine.prototype.save = function () {\n    if (this.is(OPEN) || this.is(SAVING_FAILED)) {\n      this.transition(SAVING);\n    }\n  };\n\n  PopoverStateMachine.prototype.finish = function () {\n    if (this.is(OPENING)) {\n      this.transition(OPEN);\n    } else if (this.is(SAVING)) {\n      this.transition(CLOSED);\n    }\n  };\n\n  PopoverStateMachine.prototype.fail = function () {\n    if (this.is(OPENING)) {\n      this.transition(OPENING_FAILED);\n    } else if (this.is(SAVING)) {\n      this.transition(SAVING_FAILED);\n    }\n  };\n\n  PopoverStateMachine.prototype.close = function () {\n    if (this.is(SAVING)) {\n      return;\n    }\n\n    this.transition(CLOSED);\n  };\n\n  return PopoverStateMachine;\n});\n","angular.module('rs.popover').factory('registry', function () {\n  'use strict';\n\n  function Registry() {\n    this.popovers = {};\n  }\n\n  Registry.prototype.register = function (id, scope) {\n    if (!id) {\n      throw 'Popover ID must not be empty!';\n    } else if (id in this.popovers) {\n      throw 'Popover ID \"' + id + '\" has already been registered!';\n    }\n\n    this.popovers[id] = scope;\n  };\n\n  Registry.prototype.deregister = function (id) {\n    if (id in this.popovers) {\n      delete this.popovers[id];\n    } else {\n      throw 'Popover ID \"' + id + '\" has not been registered!';\n    }\n  };\n\n  Registry.prototype.popover = function (id) {\n    if (id in this.popovers) {\n      return this.popovers[id];\n    }\n\n    throw 'Popover ID \"' + id + '\" has not been registered!';\n  };\n\n  return new Registry();\n});\n","angular.module('rs.popover').directive('rsPopoverTrigger', function (registry, Attachment) {\n  'use strict';\n\n  function findPopoverId(attrs, popoverController) {\n    if (attrs.rsPopoverTrigger) {\n      return attrs.rsPopoverTrigger;\n    } else if (popoverController) {\n      return popoverController.id;\n    }\n\n    throw 'No popover ID was specified for popover trigger!';\n  }\n\n  function findPopoverTarget(element, attrs) {\n    if (attrs.rsPopoverTarget) {\n      return angular.element('#' + attrs.rsPopoverTarget);\n    }\n\n    return element;\n  }\n\n  function findPopoverCorner(attrs) {\n    if (attrs.rsPopoverAttach) {\n      return attrs.rsPopoverAttach;\n    }\n\n    return Attachment.TOP_LEFT;\n  }\n\n  function evalPopoverData(scope, attrs) {\n    if (attrs.rsPopoverData) {\n      return scope.$eval(attrs.rsPopoverData);\n    }\n\n    return {};\n  }\n\n  return {\n    restrict: 'A',\n    require: '?^rsPopover',\n    link: function (scope, element, attrs, popoverController) {\n      var id, target, corner, data;\n\n      id = findPopoverId(attrs, popoverController);\n      target = findPopoverTarget(element, attrs);\n      corner = findPopoverCorner(attrs);\n      data = evalPopoverData(scope, attrs);\n\n      element.on('click', function (e) {\n        e.preventDefault();\n\n        registry.popover(id).toggle(target, corner, data);\n        scope.$apply();\n      });\n    }\n  };\n});\n\n","angular.module('rs.popover').factory('tether', function ($window, Attachment) {\n  'use strict';\n\n  function Tether() {\n    this.attachments = [];\n\n    angular.element($window).on('resize', angular.bind(this, this.reposition));\n  }\n\n  Tether.prototype.attach = function (element, target, attachmentPoint) {\n    var attachment;\n\n    attachment = new Attachment(element, target, attachmentPoint);\n    attachment.position();\n\n    this.attachments.push(attachment);\n\n    return attachment;\n  };\n\n  Tether.prototype.reposition = function () {\n    angular.forEach(this.attachments, function (attachment) {\n      attachment.position();\n    });\n  };\n\n  Tether.prototype.detach = function (element) {\n    var index;\n\n    angular.forEach(this.attachments, function (attachment, i) {\n      if (attachment.element === element) {\n        index = i;\n      }\n    });\n\n    this.attachments.splice(index, 1);\n  };\n\n  return new Tether();\n});\n"],"sourceRoot":"/source/"}